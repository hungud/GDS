-- //
-- PARTE DEL PAQUETE, EL RESTO ES DE FLAVIO
-- //

CREATE OR REPLACE PACKAGE PKG_GDS_ROBOT_ANULACIONES IS

TYPE GDSCursor IS ref cursor;

PROCEDURE GDS_BOLETOS_PENDIENTES_DE_PAGO(
  p_TipoClienteAgencia    IN varchar2,
  p_CondicionPagoCliente  IN varchar2,
  p_TipoClientePasajero   IN number,
  p_IdClientePasajero     IN number,
  p_IdEmpresaSucursal     IN number,
  p_MarcaEsConsolidador   IN number,
  p_ListaGDS              IN varchar2,
  p_ListaProveedores      IN varchar2,
  p_Fecha                 IN varchar2,
  p_AntesDeHora           IN varchar2,
  p_Cursor                OUT GDSCursor);

PROCEDURE GDS_BOLETOS_SINERGIA(
  p_Pseudo        IN varchar2,
  p_PNR           IN varchar2,
  p_Fecha         IN varchar2,
  p_Cursor        OUT GDSCursor);

END PKG_GDS_ROBOT_ANULACIONES;

--------

CREATE OR REPLACE PACKAGE BODY PKG_GDS_ROBOT_ANULACIONES IS

-----------------------------------------------------------------------        
/*
   Creador por: Hsanchez
Modificado por: Bchoy
      Creación: 30/10/2017
  Modificación: 26/03/2018
*/

PROCEDURE GDS_BOLETOS_PENDIENTES_DE_PAGO(
  p_TipoClienteAgencia    IN varchar2,
  p_CondicionPagoCliente  IN varchar2,
  p_TipoClientePasajero   IN number,
  p_IdClientePasajero     IN number,
  p_IdEmpresaSucursal     IN number,
  p_MarcaEsConsolidador   IN number,
  p_ListaGDS              IN varchar2,
  p_ListaProveedores      IN varchar2,
  p_Fecha                 IN varchar2,
  p_AntesDeHora           IN varchar2,
  p_Cursor                OUT GDSCursor)

AS
  v_CondicionPagoCliente varchar2(4):= UPPER(p_CondicionPagoCliente);
  v_Fecha varchar2(10) := NVL(p_Fecha, TO_CHAR(SYSDATE, 'DD/MM/YYYY'));

BEGIN 
  -- consultando boletos 
  OPEN p_Cursor FOR 
	SELECT 
		PROMO.ID_PROMOTOR AS IDPROMOTOR,
		UPPER(PROMO.NOMBRE) AS NOMBREPROMOTOR,
		PROMO.CORREO_ELECTRONICO AS CORREOPROMOTOR, 
		PROMO.ANULADA AS ANULADA,
		SU.ID_SUCURSAL AS IDSUCURSAL,
		SU.DESCRIPCION AS DESCRIPCIONSUCURSAL,
		BO.ID_PUNTO AS PUNTO,
		PM.CORREO_SUCURSAL_CAJA AS CORREOCAJA,     
		BO.ID_CLIENTE AS IDCLIENTE,
		CLI.NOMBRE AS NOMBRECLIENTE,
		CLI.ID_CONDICION_DE_PAGO AS IDCONDICIONPAGO,
		CLI.CORREO_ELECTRONICO AS CORREOCLIENTE,
		BO.ID_FILE AS IDFILE,
		BO.ID_TIPO_DE_STOCK AS IDTIPOSTOCK, 
		BO.COD_RESERVA AS PNR, 
		BO.NUMERO_DE_BOLETO AS NUMEROBOLETO,
		BO.RUTA AS RUTA,
		BO.MARCA_FACTURADO AS FACTURADO,
		TRANS.ID_PREFIJO AS IDPREFIJO,
		FAC.ID_TIPO_DE_COMPROBANTE AS IDTIPOCOMPROBANTE,
		FAC.NUMERO_SERIE1 AS NUMEROSERIE1,
		FAC.ID_FACTURA_CABEZA AS IDFACTURACABEZA,
		CASE WHEN WEBO.NO_ANULAR = 1 THEN 'NO VOIDEAR' ELSE 'VOIDEAR' END AS NOANULAR,
		TO_CHAR(BO.FECHA_DE_ALTA, 'dd/MM/yyyy hh24:mi:ss') AS FECHAALTA,
		LTRIM(TO_CHAR(BO.VENTA, '999999.99')) AS ACOBRAR,
		LTRIM(TO_CHAR(BO.IMPORTE_AFECTADO, '999999.99')) AS APLICADO,
		LTRIM(TO_CHAR(NVL((FAC.VENTA - BO.IMPORTE_AFECTADO), 0), '999999.99')) AS PENDIENTE,
		FAC.NOMBRE_PAX AS NOMBREPASAJERO,
		BO.MARCA_VOID AS VOIDEADO,
		BO.ID_VENDEDOR AS IDVENDEDOR,
		VN.NOMBRE AS NOMBREVENDEDOR,
		VN.CORREO_ELECTRONICO AS CORREOVENDEDOR,
		IJS.ID_GDS AS IDGDS,
		IJS.DESCRIPCIONGDS 
	FROM BOLETO_PAX BO
	INNER JOIN CLIENTE CLI ON (BO.ID_CLIENTE = CLI.ID_CLIENTE)
	INNER JOIN SUCURSAL SU ON SU.ID_SUCURSAL = BO.ID_SUCURSAL
	INNER JOIN PROMOTOR PROMO ON (PROMO.ID_PROMOTOR = CLI.ID_PROMOTOR)
	INNER JOIN TRANSPORTADOR TRANS ON (TRANS.ID_TRANSPORTADOR = BO.ID_TRANSPORTADOR)
	LEFT OUTER JOIN WEB_AUTORIZACION_DSCTO_EXTRA WEBO ON (WEBO.COD_RESERVA = BO.COD_RESERVA)
	INNER JOIN FACTURA_BOLETO FAC ON (FAC.ID_PROVEEDOR = BO.ID_PROVEEDOR)
		AND (FAC.NRO_BOLETO = BO.NUMERO_DE_BOLETO)
	INNER JOIN FACTURA_CABEZA CAB ON (FAC.ID_SUCURSAL = CAB.ID_SUCURSAL)
		AND (FAC.ID_TIPO_DE_COMPROBANTE = CAB.ID_TIPO_DE_COMPROBANTE)
		AND (FAC.NUMERO_SERIE1 = CAB.NUMERO_SERIE1)
		AND (FAC.ID_FACTURA_CABEZA = CAB.ID_FACTURA_CABEZA)
	INNER JOIN VENDEDOR VN ON (BO.ID_VENDEDOR = VN.ID_VENDEDOR)
	INNER JOIN PUNTO_DE_EMISION PM ON (PM.ID_SUCURSAL = SU.ID_SUCURSAL) 
		AND (PM.ID_PUNTO = BO.ID_PUNTO) 
	INNER JOIN (
      SELECT STC.ID_TIPO_DE_STOCK, GDS.ID_GDS, GDS.DESCRIPCION AS DESCRIPCIONGDS
      FROM TIPO_DE_STOCK STC
      INNER JOIN TIPO_DE_GDS GDS ON (STC.ID_GDS = GDS.ID_GDS)
      WHERE (NVL(STC.ID_GDS, -1) != -1)
	) IJS ON (BO.ID_TIPO_DE_STOCK = IJS.ID_TIPO_DE_STOCK)
	WHERE (BO.MARCA_VOID = 0)
	AND (NVL(FAC.ANULADO, 0) = 0)
	AND (BO.ES_CONEXION = 0)
	AND (((CLI.ID_TIPO_DE_CLIENTE = p_TipoClienteAgencia) AND (UPPER(CLI.ID_CONDICION_DE_PAGO) = v_CondicionPagoCliente)) 
	OR ((CLI.ID_TIPO_DE_CLIENTE = p_TipoClientePasajero) AND (BO.ID_CLIENTE = p_IdClientePasajero))) -- PASAJERO DIRECTO
	AND (TO_CHAR(BO.FECHA_DE_ALTA, 'DD/MM/YYYY') = v_Fecha)
	AND (TO_CHAR(BO.FECHA_DE_ALTA, 'hh24:mi') <= NVL(p_AntesDeHora, '23:59'))
	AND (BO.ID_PROVEEDOR IN ( 
      SELECT TRIM(regexp_substr(p_ListaProveedores, '[^,]+', 1, level)) ITEMS
      FROM dual
      CONNECT BY TRIM(regexp_substr(p_ListaProveedores, '[^,]+', 1, level)) IS NOT NULL
	))
	AND (IJS.ID_GDS IN (
      SELECT TRIM(regexp_substr(p_ListaGDS, '[^,]+', 1, level)) ITEMS
      FROM dual
      CONNECT BY TRIM(regexp_substr(p_ListaGDS, '[^,]+', 1, level)) IS NOT NULL
	))
	AND (SU.ID_SUCURSAL IN (
      SELECT ID_SUCURSAL 
      FROM SUCURSAL 
      WHERE ((ID_EMPRESA = p_IdEmpresaSucursal) AND (ES_CONSOLIDADOR = p_MarcaEsConsolidador)))
	)
	AND ((FAC.VENTA - BO.IMPORTE_AFECTADO) > (
      SELECT MONTO 
      FROM GDS_LIMITEPENDIENTEBOLETO 
      WHERE (ID_SECUENCIA = (SELECT MAX(ID_SECUENCIA) FROM GDS_LIMITEPENDIENTEBOLETO)))
	)
	ORDER BY PROMO.ID_PROMOTOR, SU.ID_SUCURSAL, BO.ID_CLIENTE, BO.NUMERO_DE_BOLETO ASC;

END GDS_BOLETOS_PENDIENTES_DE_PAGO;

-----------------------------------------------------------------------        
/*
   Creador por: Bchoy
Modificado por: Bchoy
  Modificación: 31/10/2017
*/

PROCEDURE GDS_BOLETOS_SINERGIA(
  p_Pseudo        IN varchar2,
  p_PNR           IN varchar2,
  p_Fecha         IN varchar2,
  p_Cursor        OUT GDSCursor)

AS

BEGIN 
  -- consultando boletos 
  OPEN p_Cursor FOR 
	SELECT 
		SE.PCC_HOME AS PSEUDO, 
		SE.COD_PNR AS PNR, 
		TO_CHAR(SE.FECHA_EMISION, 'dd/MM/yyyy') AS FECHAEMISION,
		'' AS NUMEROBOLETO  
	FROM NUEVOMUNDO.GDS_SINERGIA_EMISIONES SE 
	WHERE (UPPER(SE.PCC_HOME) = UPPER(NVL(TRIM(p_Pseudo), SE.PCC_HOME)))
	AND (UPPER(SE.COD_PNR) = UPPER(NVL(TRIM(p_PNR), SE.COD_PNR))) 
	AND (TO_CHAR(SE.FECHA_EMISION, 'DD/MM/YYYY') = NVL(TRIM(p_Fecha), TO_CHAR(SE.FECHA_EMISION, 'DD/MM/YYYY')))
	ORDER BY SE.FECHA_EMISION ASC;

END GDS_BOLETOS_SINERGIA;
  
END PKG_GDS_ROBOT_ANULACIONES;
